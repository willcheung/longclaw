
<div id="account-charts">
    <div class="ibox-content">
        <div class="row">
            <div class="col-lg-6" id="activities-breakdown" style="height:200px"></div>
            <div class="col-lg-6" id="top-contributors" style="height:200px;"></div>
        </div>
    </div>

    <div id="charts-container" class="ibox-content">
        <div class="row m-t-md">
            <div id="risk-chart" style="height:240px;margin-right:25px; margin-left:55px;" class="m-l-sm"></div>
        </div>

        <div class="row m-t-md">
            <div id="risk-detection-chart" style="margin-left:55px;margin-right:25px;"></div>
        </div>

        <div class="row m-t-md">
            <div id="activities-chart" style="margin-left:35px;" ></div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $("#insights-link").parent().addClass("active");

    /***********
    Sychronize Charts
    ************/

     /**
     * In order to synchronize tooltips and crosshairs, override the
     * built-in events with handlers defined on the parent element.
     */
    $('#charts-container').bind('mousemove touchmove touchstart', function (e) {
        var chart,
            point,
            i,
            event;

        // console.log(Highcharts.charts);

        for (i = 2; i < Highcharts.charts.length; i = i + 1) { // i=2 to exclude first two contributors charts
            chart = Highcharts.charts[i];
            event = chart.pointer.normalize(e.originalEvent); // Find coordinates within the chart
            point = chart.series[0].searchPoint(event, true); // Get the hovered point

            if (point) {
                point.highlight(e);
            }
        }
    });


    /**
     * Synchronize zooming through the setExtremes event handler.
     */
    function syncExtremes(e) {
        var thisChart = this.chart;

        if (e.trigger !== 'syncExtremes') { // Prevent feedback loop
            Highcharts.each(Highcharts.charts, function (chart) {
                if (chart !== thisChart) {
                    if (chart.xAxis[0].setExtremes) { // It is null while updating
                        chart.xAxis[0].setExtremes(e.min, e.max, undefined, false, { trigger: 'syncExtremes' });
                    }
                }
            });
        }
    }


    /**
     * Override the reset function, we don't need to hide the tooltips and crosshairs.
     */
    Highcharts.Pointer.prototype.reset = function () {
        return undefined;
    };

    /**
     * Highlight a point by showing tooltip, setting hover state and draw crosshair
     */
    Highcharts.Point.prototype.highlight = function (event) {
        this.onMouseOver(); // Show the hover marker
        this.series.chart.tooltip.refresh(this); // Show the tooltip
        this.series.chart.xAxis[0].drawCrosshair(event, this); // Show the crosshair
    };


    $('#activities-breakdown').highcharts({
        chart: {
            plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false,
            type: 'pie'
        },
        credits: false,
        title: {
            text: "Activities By Team (Last 7d)",
            align: 'left',
            margin: 0,
            x: 35,
            style: {
                color: '#555555',
                fontSize: '16px'
            }
        },
        tooltip: {
            pointFormat: '{point.percentage:.1f}%'
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                dataLabels: {
                    enabled: false,
                    distance: -25,
                    format: '{point.name}',
                }
            }
        },
        series: [{
            name: 'Team',
            colorByPoint: true,
            data: [
            <% @activities_by_dept.each do |dept, count| %>
            {
                name: "<%= dept %>",
                y: <%= count %>
            },
            <% end %>
            ]
        }]
    });

    $('#top-contributors').highcharts({
        chart: {
            type: 'bar'
        },
        title: {
            text: 'Most Active Contributors (Last 7d)',
            align: 'left',
            margin: 0,
            x: 35,
            style: {
                color: '#555555',
                fontSize: '15px'
            }
        },
        credits: { enabled: false },
        xAxis: {
            categories: <%= @team_leaderboard.map(&:email).to_json.html_safe %>
        },
        yAxis: {
            min: 0,
            title: {
                text: ''
            }
        },
        legend: {
            enabled: false
        },
        plotOptions: {
            series: {
                stacking: 'normal'
            }
        },
        series: [{
            name: 'Inbound',
            data: <%= @team_leaderboard.map(&:inbound_count).to_json.html_safe %>
        }, {
            name: 'Outbound',
            data: <%= @team_leaderboard.map(&:outbound_count).to_json.html_safe %>
        }]
    });

    $('#risk-chart').highcharts({
        title: {
            text: "Risk Score Trend",
            align: 'left',
            margin: 0,
            x: 35,
            style: {
                color: '#555555',
                fontSize: '16px'
            }
        },
        xAxis: {
            type: 'datetime',
            crosshair: true,
            events: {
                setExtremes: syncExtremes
            }
        },
        yAxis: {
            title: {
                text: ''
            },
            labels: { enabled: true },
            gridLineWidth: 0,
            minorGridLineWidth: 0,
            plotLines: [{
                value: 0,
                width: 1,
                color: '#808080'
            }],
            min: 0,
            max: 100,
            plotBands: [ { // Low Risk
                from: 0,
                to: 60,
                color: 'rgba(170, 252, 174, 0.1)',
                label: {
                    text: 'Low Risk',
                    style: {
                        color: '#606060'
                    }
                }
                }, { // Medium Risk
                    from: 60,
                    to: 80,
                    color: 'rgba(246, 188, 42, 0.1)',
                    label: {
                        text: 'Medium Risk',
                        style: {
                            color: '#606060'
                        }
                    }
                }, { // High Risk
                    from: 80,
                    to: 100,
                    color: 'rgba(246, 42, 46, 0.1)',
                    label: {
                        text: 'High Risk',
                        style: {
                            color: '#606060'
                        }
                    }
                }]
            },
            tooltip: {
                positioner: function () {
                    return {
                        x: this.chart.chartWidth - this.label.width, // right aligned
                        y: -15 // align to title
                    };
                },
                borderWidth: 0,
                backgroundColor: 'none',
                pointFormat: '{point.y}',
                xDateFormat: '%b %e',
                shadow: false,
                style: {
                    fontSize: '16px',
                    color: '#555555'
                }
            },
            credits: {
                enabled: false
            },
            legend: {
                enabled: false
            },
            series: [{
                pointInterval: <%= 1.day * 1000 %>,
                pointStart: <%= 14.days.ago.at_midnight.to_i * 1000 %>,
                data: <%= @risk_score_trend %>
            }]
        });

    $('#risk-detection-chart').highcharts({
        chart: {
            height: 140,
            events:{
              load: function(event) {
                var extremes = this.yAxis[0].getExtremes();
                  if(extremes.dataMax == 0){
                    extremes.max = 100;
                    this.yAxis[0].setExtremes(0, 100);
                  }
                }
            },
        },
        credits: {
            enabled: false
        },
        title: {
            text: "% Negative Sentiment / Engagement Volume",
                align: 'left',
                margin: 0,
                x: 35,
                style: {
                    color: '#555555',
                    fontSize: '16px'
                }
        },
        xAxis: {
            type: 'datetime',
            crosshair: true,
            events: {
                setExtremes: syncExtremes
            }
        },
        yAxis: {
            title: { text: '' },
            labels: { enabled: true },
            minorGridLineWidth: 0
        },
        legend: {
            enabled: false
        },
        tooltip: {
            positioner: function () {
                return {
                    x: this.chart.chartWidth - this.label.width, // right aligned
                    y: -15 // align to title
                };
            },
            borderWidth: 0,
            backgroundColor: 'none',
            pointFormat: '{point.y:.0f}'+"%",
            xDateFormat: '%b %e',
            shadow: false,
            style: {
                fontSize: '16px',
                color: '#555555'
            }
        },
        series: [{
            type: 'area',
            name: 'New Risks',
            color: '#FF5050',
            pointInterval: <%= 1.day * 1000 %>,
            pointStart: <%= 14.days.ago.at_midnight.to_i * 1000 %>,
            data: <%= @risk_activity_engagement.to_json.html_safe  %>
        }]
    });

    $('#activities-chart').highcharts({
        chart: {
            height: <%= @activities_by_category_date.blank? ? 140 : 240 %>,
            events:{
              load: function(event) {
                var extremes = this.yAxis[0].getExtremes();
                if(extremes.dataMax == 0){
                  extremes.max = 1;
                  this.yAxis[0].setExtremes(0,1);
                } else{
                  this.yAxis[0].setExtremes(0, extremes.dataMax);
                }
                }
            },
        },
        credits: {
            enabled: false
        },
        title: {
            text: "Engagement Volume",
                align: 'left',
                margin: 0,
                x: 35,
                style: {
                    color: '#555555',
                    fontSize: '16px'
                }
        },
        xAxis: {
            type: 'datetime',
            crosshair: true,
            events: {
                setExtremes: syncExtremes
            }
        },
        yAxis: {
            title: { text: '' },
            labels: { enabled: true },
            minorGridLineWidth: 0
        },
        legend: {
            enabled: true
        },
        tooltip: {
            positioner: function () {
                return {
                    x: this.chart.chartWidth - this.label.width, // right aligned
                    y: -15 // align to title
                };
            },
            borderWidth: 0,
            backgroundColor: 'none',
            pointFormat: '{point.stackTotal}',
            xDateFormat: '%b %e',
            shadow: false,
            style: {
                fontSize: '16px',
                color: '#555555'
            }
        },
        plotOptions: {
            series: {
                stacking: 'normal'
            }
        },
        series: [
        <% @activities_by_category_date.each do |category, activities_by_date| %>
        {
            type: 'column',
            name: '<%= category %>',
            color: '<%= highcharts_series_color(category) %>',
            pointInterval: <%= 1.day * 1000 %>,
            pointStart: <%= 14.days.ago.at_midnight.to_i * 1000 %>,
            data: <%= activities_by_date.map {|c| c.num_activities }.to_json.html_safe %>
        },
        <% end %>
        // Dummy data series to make sure axis still shown when there is no data
        {
            type: 'column',
            pointInterval: <%= 1.day * 1000 %>,
            pointStart: <%= 14.days.ago.at_midnight.to_i * 1000 %>,
            data: <%= Array.new(14, 0) %>,
            showInLegend: false
        }]
    });


</script>
