<% remote ||= false %>
<% modal_type ||= nil %>
<% url = (modal_type == 'extension_edit_contact_modal') ? contact_path(id: contact.id) : contacts_path %>
<% account_id = (modal_type == 'app_new_contact_modal') ? @account.id : contact.account_id || params[:id] %>
<%= simple_form_for contact, remote: remote, html: {role: :form, 'data-model' => 'contact'}, url: url do |f| %>

  <%# Added Bootstrap classes, and help-block container for error messages %>
  <%# TODO: Update contact error messages are currently not being displayed.  Will need to address this lack of error feedback to user. %>
      <span class="help-block" style="color:red"></span>
      <%= f.input :first_name, wrapper_html: { class: 'col-md-6', onkeyup: "changedValue('" + modal_id + "')", old_value: contact.first_name } %>
      <%= f.input :last_name, wrapper_html: { class: 'col-md-6', onkeyup: "changedValue('" + modal_id + "')", old_value: contact.last_name } %>
      <%= f.input :email, wrapper_html: { class: 'col-md-6', onkeyup: "changedValue('" + modal_id + "')", old_value: contact.email }, :required => true %>
      <%= f.input :phone, wrapper_html: { class: 'col-md-4', onkeyup: "changedValue('" + modal_id + "')", old_value: contact.phone } %>
      <%= f.input :title, wrapper_html: { class: 'col-md-6', onkeyup: "changedValue('" + modal_id + "')", old_value: contact.title } %>


      <% if modal_type == 'app_new_contact_modal' %>
        <%= f.input :account_id, as: :hidden, value: account_id %>
      <% else %>

      <div class="form-group string required contact_account_id col-md-12" onchange="changedValue('<%= modal_id %>')" old_value="<%= contact.account_id %>">
        <%= f.label :account %> <i class="fa fa-question-circle" data-toggle="tooltip" data-html="true" data-placement="top" data-original-title="Account is used to group multiple contacts together, like a company. If this is an individual, we can use email address. <br><br> You can change this later in Accounts tab."></i>
        <select class="contextsmith_account_box" data-placeholder="Select an account" name="contact[account_id]" id="contact_account_id">
          <% if @accounts.blank? %>
            <option selected value="<%= User::FREE_EMAIL_PROVIDERS.include?(get_domain(contact.email)) ? contact.email : get_domain(contact.email) %>">Create "<%= User::FREE_EMAIL_PROVIDERS.include?(get_domain(contact.email)) ? contact.email : get_domain(contact.email) %>"</option>
          <% else %>
            <% @accounts.each do |a| %>
              <option value="<%= a.id %>" <%= "selected" if a.id == account_id %>><%= a.name %></option>
            <% end %>
            
            <option <%= "selected" if !@accounts.detect { |a| a.id == account_id } %> value="<%= User::FREE_EMAIL_PROVIDERS.include?(get_domain(contact.email)) ? contact.email : get_domain(contact.email) %>">Create "<%= User::FREE_EMAIL_PROVIDERS.include?(get_domain(contact.email)) ? contact.email : get_domain(contact.email) %>"</option>
          <% end  %>
        </select>
      </div>

      <% end %>

      <%= f.input :id, as: :hidden %>
      <%= f.input :source, as: :hidden %>
      <%= f.input :external_source_id, as: :hidden %>

  <div class="clearfix">&nbsp;</div>
  <% if ['extension_new_contact_modal','extension_edit_contact_modal'].include? modal_type  # from Chrome extension %>
      <%= f.button :submit, class: 'btn-primary pull-right form-group', style: 'width: 100%' %>
  <% else %>
      <%= f.button :submit, class: 'btn-primary pull-right form-group' %>
  <% end %>

<% end %>