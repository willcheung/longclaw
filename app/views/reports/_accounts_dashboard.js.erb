// Shared metric update code (left panel) between accounts_dashboard.html.erb & ad_sort_data.js.erb
var chart = $('#left-chart').highcharts();
var barColors = { 
  default: '<%= highcharts_series_color() %>', 
  highRisk: '#ED5565',
  mediumRisk: '#FFA500',
  lowRisk: '#A1C436',
  negative: '#FF4D4D' // ruby red
};

//clear all existing series
while(chart.series.length > 0) {
  chart.series[0].remove();
}

<% if @data.present? %>
  // proj category: [name, deal_size, close_date, project_id]
  chart.xAxis[0].setCategories(<%= @data.map{ |d| [d.name, (d.deal_size.nil? ? "" : "$"+number_to_human(d.deal_size)), (d.close_date.nil? ? "" : d.close_date.strftime('%b%e')), d.id] }.to_json.html_safe %>, false);

  <% if @metric == ReportsController::ACCOUNT_DASHBOARD_METRIC[:activities_last14d] %>
    <% @categories.each do |c| %>
    chart.addSeries({
      name: "<%= c.nil? ? 'NoActivity' : c %>",
      color: "<%= highcharts_series_color(c) %>",  //set color according to category
      showInLegend: false,
      data: [ 
      <% @data.each do |opp| %> 
        <% m = opp.y.find{|m| m.category == c} if opp.y.present? %>  //find metric for this opportunity
        {
          y: <%= (m.present? && m.num_activities.present? && c.present?) ? m.num_activities : 0 %>,
          id: "<%= opp.id %>",
          //name: "<%= opp.name %>"
        }, 
      <% end if @data.present? %> 
      ]
    }, false)
    <% end unless @categories.blank? %>

    // Show legend for specific metric and valid series
    for (var i=0; i < chart.series.length; i++) {
      if (chart.series[i].name !== 'NoActivity')
      chart.series[i].update({ showInLegend: true });
    }
  <% else %>
    chart.addSeries({
      name: "<%= @metric.html_safe %>",
      data: [ <% @data.each do |opp| %>
      {
        y: <%= opp.y %>,
        color: barColors["<%= opp.color %>"],
        id: "<%= opp.id %>",
        //name: "<%= opp.name %>"
      },
      <% end if @data.present? %> 
      ]
    }, false);
    // Hide legend
    for (var i=0; i < chart.series.length; i++) {
      chart.series[i].update({ showInLegend: false });
    }
  <% end %>

  <% if @metric == ReportsController::ACCOUNT_DASHBOARD_METRIC[:deal_size] %>
    chart.yAxis[0].update({
      stackLabels: {
        enabled: true,
        formatter: function () {
          return "$"+large_number_to_human_signif_digits(this.total);
        }
      }
    });
  <% else %>
    chart.yAxis[0].update({
      stackLabels: {
        enabled: true,
        formatter: function () {
          return this.total;
        }
      }
    });
  <% end %>
<% end %> // if @data.present? 

chart.setSize(undefined, 50 + Math.min(1150, <%= @data.present? ? @data.size : 0 %> * 90));

// handle clicking on opportunity label
$('.highcharts-xaxis-labels text').click(function() {
    $.get("ad_account_data/" + get_category_uuid($(this).children(0)[0].firstChild.data), function (data) {
        $("#account-data").html(data);
        renderProjectCharts(this.y);
    })
});
$('.highcharts-xaxis-labels text').css("cursor", "pointer");

function get_category_uuid (catname) {
    //console.log("Finding proj: " + catname);
  <% if @data.blank? %>
    return "";
  <% else %>
    var map = {
    <% @data.each do |d| %>
      "<%= d.name.html_safe %>": "<%= d.id %>",
    <% end %>
    };

    catname = catname.trim();
    // In case of axis label truncation and wrapping, implement "close-enough" match
    var match = map[catname];
    if (!match){
      // Attempt to match the max number of chars, so keep truncating the string until matched
      var keys = Object.keys(map);
      for (var e = 0; ; e++) {
        var keyname;
        var found_nonempty_key = false;
        for (k in Object.keys(map)) {
          keyname = keys[k];
          if (keyname.substring(0, keyname.length - e) == catname)
              return map[keyname];
          found_nonempty_key = found_nonempty_key || (keyname.length - e > 0);
        }
        if (!found_nonempty_key) // if all keys are truncated to 0 length, quit!
          break;
      }
      return ""; // cannot find category
    } else {
      return match;
    }
  <% end %>
}

<% if @data.present? && @data.length == 25 %>
$('#left-chart-trunc-message').show();
<% else %>
$('#left-chart-trunc-message').hide();
<% end %>