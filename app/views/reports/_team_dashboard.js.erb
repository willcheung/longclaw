// Shared metric update code (left panel) between team_dashboard.html.erb & td_sort_data.js.erb
var chart = $('#left-chart').highcharts();
chart.xAxis[0].setCategories(<%= @data.map(&:name).to_json.html_safe %>, false);

//clear all old series
while(chart.series.length > 0) {
  chart.series[0].remove();
}

<% if @data.present? %>

  // Add the data via series
  <% if @metric == ReportsController::TEAM_DASHBOARD_METRIC[:activities_last14d] %>
    // chart.legend.update({enabled: true});
    <% @categories.each.with_index do |c, i| %>
    chart.addSeries({
      name: "<%= c %>",
      color: "<%= highcharts_series_color(c) %>", //set color according to category
      //showInLegend: true,
      data: [ 
      <% @data.each do |d| %>
        <% m = d.y.find{|m| m.category == c} if d.y.present? %>  //find metric for this user
        {
          y: <%= (m.present? && m.num_activities.present?)  ? m.num_activities : 0 %>,
          id: "<%= d.id %>"
        }, 
      <% end if @data.present? %> 
      ]
    }, false);
    <% end unless @categories.blank? %>
  <% elsif @metric == ReportsController::TEAM_DASHBOARD_METRIC[:time_spent_last14d] %>
    // chart.legend.update({enabled: true});
    <% @categories.each do |c| %>
    chart.addSeries({
      name: "<%= c %>",
      color: "<%= highcharts_series_color(c) %>",  //set color according to category
      tooltip: {
        pointFormatter: function() {
          return '<span style="color:' + this.color + '">\u25CF</span>  ' + this.series.name + ': <b>' + convert_secs_to_ddhhmm(this.y) + '</b>';
        }
      },
      // showInLegend: true,
      data: [ 
      <% @data.each do |d| %>
      {
        y: <%= d.y[c] %>,
        id: "<%= d.id %>"
      },
      <% end %> 
      ]
    }, false);
    <% end unless @categories.blank? %>
  <% else %>
    // chart.legend.update({enabled: false});
    chart.addSeries({
      name: '<%= @metric.html_safe %>',
      color: '<%= highcharts_series_color() %>',
      // showInLegend: false,
      data: [ <% @data.each do |d| %>
      {
        y: <%= d.y %>,
        id: "<%= d.id %>"
      },
      <% end %> ]
    }, false);
  <% end %>

  // Set/reset the axis labels and subtitles on chart
  <% if @metric == ReportsController::TEAM_DASHBOARD_METRIC[:time_spent_last14d] %>
    chart.yAxis[0].update({
      stackLabels: {
        enabled: true,
        formatter: function () {
          return convert_secs_to_ddhhmm(this.total);
        }
      }
    });

    chart.subtitle.update({
      text: '(in hh:mm)'
    });
  <% else %>
    reset_labels_on_axis(chart.yAxis[0]);
    reset_subtitles_on_chart(chart);
  <% end %>

<% else %> // if @data not present
  // reset_labels_on_axis(chart.yAxis[0]);
  reset_subtitles_on_chart(chart);
<% end %>

chart.yAxis[0].update( { tickInterval: <%= @metric_tick_interval %> });
//console.log("datamax=" + chart.yAxis[0].dataMax);
chart.setSize(undefined, 70 + Math.min(1150, <%= @data.size %> * 110)); //set graph height

// <% @data.each do |d| %>console.log("<%= d.name.html_safe %>: <%= d %>");<% end %>

// handle clicking on user label
$('.highcharts-xaxis-labels text tspan').click(function() {
    $.get("td_user_data/" + get_category_uuid($(this).text()), function (data) {
        $("#user-data").html(data);
        renderCharts(this.y);
    })
});

function get_category_uuid (catname) {
  var map = {
  <% @data.each do |d| %>
    "<%= d.name.html_safe %>": "<%= d.id %>",
  <% end %>
  };
  return map[catname];
}
