<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Leaderboard Dashboard</h2>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row filter-space">
      <strong>Filter:</strong>
    </div>
    <div class="row filter-space filter-group">
        <select id="team-filter" class="category_filter col-md-3" data-placeholder="Select Team">
            <option></option> <!-- no filter -->
            <% @departments.each do |d| %>
            <option value="<%=d %>"  <% if params[:team] == d  %> selected   <% end %> ><%=d %></option>
            <% end %>
            <option value="none">(No Team)</option>
        </select>
        <select id="title-filter" class="category_filter col-md-3" data-placeholder="Select Title">
            <option></option>
            <% @titles.each do |t| %>
            <option value="<%=t %>"  <% if params[:title] == t  %> selected   <% end %> ><%=t %></option>
            <% end %>
            <option value="none">(No Title)</option>
        </select>
        <select id="close-date-filter" class="category_filter col-md-3" data-placeholder="Select Close Date">
            <option value="Any"></option> <!-- no filter -->
            <option <%= 'selected' if params[:close_date] == Project::CLOSE_DATE_RANGE[:Open] %> ><%= Project::CLOSE_DATE_RANGE[:Open] %></option>
            <option <%= 'selected' if params[:close_date] == Project::CLOSE_DATE_RANGE[:Closed] %> ><%= Project::CLOSE_DATE_RANGE[:Closed] %></option>
            <optgroup label="Quarter">
                <option <%= 'selected' if params[:close_date] == Project::CLOSE_DATE_RANGE[:ThisQuarter] %> ><%= Project::CLOSE_DATE_RANGE[:ThisQuarter] %></option>
                <option <%= 'selected' if params[:close_date] == Project::CLOSE_DATE_RANGE[:LastQuarter] %> ><%= Project::CLOSE_DATE_RANGE[:LastQuarter] %></option>
                <option <%= 'selected' if params[:close_date] == Project::CLOSE_DATE_RANGE[:NextQuarter] %> ><%= Project::CLOSE_DATE_RANGE[:NextQuarter] %></option>
            </optgroup>
            <optgroup label="x-To-Date">
                <option <%= 'selected' if params[:close_date] == Project::CLOSE_DATE_RANGE[:QTD] %> ><%= Project::CLOSE_DATE_RANGE[:QTD] %></option>
                <option <%= 'selected' if params[:close_date] == Project::CLOSE_DATE_RANGE[:YTD] %> ><%= Project::CLOSE_DATE_RANGE[:YTD] %></option>
            </optgroup>
        </select>
    </div>

    <!-- Top Dashboard Panel: (3) Salesforce-linked Forecast and Stage reports -->
    <div class="row border-bottom ">
      <div class="col-lg-3">
          <div class="ibox float-e-margins">
              <div id="closedwon-box"></div>
          </div>
      </div>

      <div class="col-lg-3">
          <div class="ibox float-e-margins">
              <div class='ibox-title'>
                  <h5>Deals by Forecast</h5>
              </div>
              <div id="forecast-chart" class="ibox-content forecast-chart" style="height:220px;padding-bottom:0"></div>
          </div>
      </div>

      <div class="col-lg-6">
          <div class="ibox float-e-margins">
              <div class='ibox-title'>
                  <h5>Deals by Stage</h5>
              </div>
              <div id="stage-chart" class="ibox-content stage-chart" style="height:220px;padding-bottom:0"></div>
          </div>
      </div>
    </div>

    <div class="row border-bottom white-bg dashboard-header">
        <!-- LEFT (metric sort) -->
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-6">
                    <h4 class="m-l-md">Sort By:
                        <select id="sort-type" class="metric_filter col-lg-8" data-placeholder="Select Metric">
                          <% ReportsController::TEAM_DASHBOARD_METRIC.values.each do |label| %>
                            <option <%= "selected" if params[:sort] == label %>><%= label %></option>
                          <% end %>
                        </select>
                    </h4>
                </div>
                <div class="col-md-6">
                    <h4 class="m-l-md">Metric:
                        <select id="metric-type" class="metric_filter col-lg-8" data-placeholder="Select Metric">
                          <% ReportsController::TEAM_DASHBOARD_METRIC.values.each do |label| %>
                            <option <%= "selected" if params[:metric] == label %>><%= label %></option>
                          <% end %>
                        </select>
                    </h4>
                </div>
            </div>
            <div id="left-chart" class="left-chart" style="height:1200px;max-width:700px;"></div>
            
        </div>

        <!-- RIGHT (user detail) -->
        <div class="col-md-6" style="margin-top:45px;">
            <div id="user-data">
                <div class="row" style="margin-top:50px;">
                    <h3>&larr; Click on a bar/label to see details about the rep.</h3>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Opportunity Profile Modal -->
<div class="modal fade" id="opportunity-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-body">

        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <div id="opportunity-profile"></div>
      </div>
    </div>
  </div>
</div>

<%= render "teaser" if current_user.trial? %>

<script type="text/javascript">

    $(function () {
        $('#sort-type, #metric-type, #team-filter, #title-filter, #close-date-filter').change( function () {
            // Clear Opportunity data ("right") chart
            $('#account-data').html("<div class=row style=margin-top:50px;><h3>&larr; Click on a bar to see details about the rep.</h3></div>");

            // Build URL for AJAX call for filtered data
            let params = {};
            if ($('#team-filter').val()) {
              params.team = $('#team-filter').val();
            }
            if ($('#title-filter').val()) {
              params.title = $('#title-filter').val();
            }
            if ($('#close-date-filter').val()) {
              params.close_date = $('#close-date-filter').val();
            }
            var url = "td_sort_data/" + encodeURIComponent($('#sort-type').val()) + "/" + encodeURIComponent($('#metric-type').val()) + "?" + $.param(params);
            $.getScript(url)
        });

        $('#forecast-chart').highcharts({
            chart: {
                type: 'column'
            },
            title: {
                text: ''
            },
//            title: {
//                text: 'Deals by Forecast',
//                style: {
//                    color: '#676a6c',
//                    fontSize: '14px',
//                    fontFamily: 'Roboto'
//                },
//                align: 'left'
//            },
            credits: {
                enabled: false
            },
            xAxis: {
                crosshair: true,
                labels: {
                    style: {
                        fontSize: '9px'
                    }
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: ''
                },
                labels: {
                   enabled: false
               },
               stackLabels: {
                    enabled: true,
                    formatter: function () {
                        return "$"+large_number_to_human_signif_digits(this.total);
                    },
                    style: {
                        color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                    }
                }
            },
            tooltip: {
                enabled: true,
                formatter: function () {
                    return '$' + large_number_to_human_signif_digits(this.total) + ' in ' + this.x;
                }
            },
            legend: {
                enabled: false
            },
            plotOptions: {
                column: {
                    stacking: 'normal',
                    pointPadding: 0.2,
                    borderWidth: 0,
                    dataLabels: {
                        enabled: false,
                        format: '${y}',
                        style: {
                            color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                        }
                    }
                },
                 series: {
                    pointPadding: 0.1,
                    groupPadding: 0,
                    borderWidth: 0
                }
            }
        });

        $('#stage-chart').highcharts({
            chart: {
                type: 'column'
            },
            title: {
                text: ''
            },
//            title: {
//                text: 'Deals by Stage',
//                style: {
//                    color: '#676a6c',
//                    fontSize: '14px',
//                    fontFamily: 'Roboto'
//                },
//                align: 'left'
//            },
            credits: {
                enabled: false
            },
            xAxis: {
                crosshair: true,
                labels: {
                    style: {
                        fontSize: '9px'
                    }
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: ''
                },
                labels: {
                   enabled: false
                },
                stackLabels: {
                    enabled: true,
                    formatter: function () {
                        //return Highcharts.numberFormat(this.total, 0, null, "");
                        return "$"+large_number_to_human_signif_digits(this.total);
                    },
                    style: {
                        color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                    }
                }
            },
            tooltip: {
                enabled: true,
                formatter: function () {
                    return '$' + large_number_to_human_signif_digits(this.total) + ' in ' + this.x;
                }
            },
            legend: {
                enabled: false
            },
            plotOptions: {
                column: {
                    stacking: 'normal',
                    pointPadding: 0.2,
                    borderWidth: 0,
                    dataLabels: {
                        format: '${y}',
                        style: {
                            color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                        }
                    }
                },
                 series: {
                    pointPadding: 0.1,
                    groupPadding: 0.1,
                    borderWidth: 0
                }
            }
        });

        $('#left-chart').highcharts({
            chart: {
                type: 'bar',
//                marginTop: 55,
//                marginRight: 35
                margin: [55, 10, 60, 10]

            },
            title: {
                text: ''
            },
            subtitle: {
                text: ' ',
                align: 'center',
                y: 40
            },
            xAxis: {
                gridLineWidth: 0,
                minorGridLineWidth: 0,
                lineWidth: 0,
                tickWidth: 0,
                offset: 0,
                left: '50%',
                labels: {
                    align: 'center',
                    x: 0
                }
            },
            yAxis: [{
                title: {
                    text: null
                },
                labels: {
                    enabled: false
                },
                gridLineWidth: 0,
                minorGridLineWidth: 0,
                lineWidth: 0,
                offset: 0,
                left: '0%',
                width: '40%',
                reversed: true
            },{
                title: {
                    text: null
                },
                labels: {
                    enabled: false
                },
                gridLineWidth: 0,
                minorGridLineWidth: 0,
                lineWidth: 0,
                offset: 0,
                left: '60%',
                width: '40%'
            }],
            legend: {
                enabled: true,
                verticalAlign: 'top',
                itemStyle: {
                    fontWeight: 'light',
                    fontSize: 12         
                }
            },
            plotOptions: {
                series: {
                    stacking: 'normal',
                    cursor: 'pointer',
                    maxPointWidth: 75,
                    point: {
                        events: {
                            click: function () {
                                $.get("td_user_data/" + this.options.id, function (data) {
                                    $("#user-data").html(data);
                                    renderUserCharts(this.y);
                                })
                            }
                        }
                    }
                },
                column: {
                    events: {

                    }
                },
                allowPointSelect: false
            },
            credits: {
                enabled: false
            }
        });

        // Highcharts.setOptions({
        //     global: {
        //         timezoneOffset: <%= @time_zone_offset_min %>
        //     }
        // });

        <%= render partial: "reports/accounts_dashboard_top.js" %>
        <%= render partial: "reports/team_dashboard.js" %>
    });
</script>

